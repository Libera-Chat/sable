The Sync Protocol
-----------------

Authentication and Authorisation
================================

All connections are authenticated by the TLS layer - the network configuration defines a CA certificate,
and all client and server endpoints are required to have a certificate signed by that CA.

Connections with a valid certificate are, for now, assumed authorised to do anything the protcol permits.

Message Format
==============

Each message passes over the TLS connection as a four-byte (big-endian) message length, followed by the 
JSON serialisation of a message type value.

Message Types
=============

These are defined by the `Message` enum. Their meanings are:

 * NewEvent(Event) - used to propagate a single newly-created event to the network
 * BulkEvents(Vec<Event>) - A response to a request for specific events
 * SyncRequest(EventClock) - request for all events that occurred since the stated clock
 * GetEvent(EventId) - request for a single event ID
 * GetNetworkState - request for the JSON-encoded complete state of the network
 * NetworkState - JSON-encoded complete network state, used to bootstrap a new server
 * Done - close the connection

Connection Flow
===============

The client side should send the first message. At each stage, the possible options for response depend
purely on the last received message:

 * NewEvent - may be answered with SyncRequest, GetEvent, or Done
 * BulkEvents - may be answered with SyncRequest, GetEvent, or Done
 * SyncRequest - must be answered with BulkEvents (which may be an empty vector)
 * GetEvent - must be answered with BulkEvents (as above)
 * GetNetworkState - must be answered with NetworkState
 * NetworkState - must be answered with Done